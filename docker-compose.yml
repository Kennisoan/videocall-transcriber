services:
  db:
    image: postgres:15-alpine
    container_name: vct_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - vct_network

  backend:
    build:
      context: ./backend
    container_name: vct_backend
    env_file:
      - .env
    depends_on:
      - db
    expose:
      - '8000'
    volumes:
      - ./recorder/recordings:/recordings
    networks:
      - vct_network
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000

  frontend:
    build:
      context: ./frontend
    container_name: vct_frontend
    env_file:
      - .env
    depends_on:
      - backend
    expose:
      - '80'
    networks:
      - vct_network

  nginx:
    image: nginx:latest
    container_name: vct_nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - frontend
      - backend
    networks:
      - vct_network
    profiles:
      - production

  certbot:
    image: certbot/certbot
    container_name: vct_certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
                  while :; do
                      sleep 12h & wait $${!};
                      certbot renew;
                  done;'
    depends_on:
      - nginx
    networks:
      - vct_network
    profiles:
      - production

volumes:
  db_data:

networks:
  vct_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
